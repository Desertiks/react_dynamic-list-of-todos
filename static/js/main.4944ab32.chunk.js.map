{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","setSelectedTodo","selectedTodoId","className","map","todo","id","completed","title","classNames","type","onClick","TodoFilter","filter","useState","all","status","setStatus","quote","setQuote","useEffect","filtred","lowerQuote","toLowerCase","active","includes","complete","Error","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","user","setUser","userId","getUser","href","email","name","App","setTodos","filtredTodos","setFiltredTodos","getTodosFromApi","a","response","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4944ab32.chunk.js","sourcesContent":["import { ChangeEvent, useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  filter: (value : Todo[]) => void,\n};\n\nenum Status {\n  all,\n  active,\n  complete,\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, filter }) => {\n  const [status, setStatus] = useState(Status.all);\n  const [quote, setQuote] = useState('');\n\n  const handleFilter = (\n    event: ChangeEvent<HTMLSelectElement> | ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { value } = event.target;\n\n    setQuote(value);\n  };\n\n  const handleStatus = (value: Status) => {\n    setStatus(value);\n  };\n\n  useEffect(() => {\n    let filtred = [...todos];\n\n    const lowerQuote = quote.toLowerCase();\n\n    if (status !== Status.all) {\n      filtred = filtred\n        .filter(todo => {\n          const { completed } = todo;\n\n          switch (status) {\n            case Status.active:\n              if (quote) {\n                return !completed && todo.title.includes(lowerQuote);\n              }\n\n              return !completed;\n            case Status.complete:\n              if (quote) {\n                return completed && todo.title.includes(lowerQuote);\n              }\n\n              return completed;\n            default:\n              throw new Error('Invalid status filter');\n          }\n        });\n    }\n\n    if (quote && Status.all === status) {\n      filtred = filtred.filter(todo => {\n        return todo.title.includes(lowerQuote);\n      });\n    }\n\n    filter(filtred);\n  }, [status, quote]);\n\n  return (\n    <form\n      onSubmit={(event) => event.preventDefault()}\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            className=\"option\"\n            value={status}\n            onChange={(event) => handleStatus(+event.target.value)}\n          >\n            <option value={Status.all}>All</option>\n            <option value={Status.active}>Active</option>\n            <option value={Status.complete}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={quote}\n          onChange={handleFilter}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {quote\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuote('')}\n              aria-label=\"Clear\"\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (value: Todo) => void,\n  selectedTodoId?: number | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, completed, title } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': id === selectedTodoId,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            {!completed\n              ? (\n                <td className=\"is-vcentered\" />\n              )\n              : (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    {\n                      'fa-eye-slash': id === selectedTodoId,\n                      'fa-eye': id !== selectedTodoId,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (value: null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    userId,\n    title,\n    completed,\n    id,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId).then(resolve => setUser(resolve));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filtredTodos, setFiltredTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    const getTodosFromApi = async () => {\n      const response = await getTodos();\n\n      setTodos(response);\n      setFiltredTodos(response);\n    };\n\n    getTodosFromApi();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter todos={todos} filter={setFiltredTodos} />\n            </div>\n\n            <div className=\"block\">\n              {(!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filtredTodos}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodoId={selectedTodo?.id}\n                  />\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n      && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}